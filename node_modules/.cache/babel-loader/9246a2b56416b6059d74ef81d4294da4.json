{"ast":null,"code":"import _classCallCheck from \"/home/canocalir/reactpomodorotimer/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/canocalir/reactpomodorotimer/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/canocalir/reactpomodorotimer/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/canocalir/reactpomodorotimer/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/canocalir/reactpomodorotimer/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/canocalir/reactpomodorotimer/src/components/Timer/Timer.js\";\nimport React, { Component } from 'react';\n\nvar Timer =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Timer, _Component);\n\n  function Timer() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Timer);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Timer)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _this.timer = function () {\n      if (_this.props.timerRunning === true) {\n        clearInterval(_this.props.timerId);\n\n        _this.props.setCurrentTime(\"25 : 00\");\n\n        _this.props.setTimerRunning();\n      } else {\n        _this.props.cycle === \"Session\" ? _this.props.startTimer(_this.props.workTime) : _this.props.startTimer(_this.props.breakTime);\n      }\n    };\n\n    return _this;\n  }\n\n  _createClass(Timer, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        className: \"timer\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 19\n        },\n        __self: this\n      }, React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 20\n        },\n        __self: this\n      }), React.createElement(\"span\", {\n        id: \"count\",\n        onClick: this.props.timer,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 21\n        },\n        __self: this\n      }, this.props.currentTime), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 24\n        },\n        __self: this\n      }), React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 25\n        },\n        __self: this\n      }, this.props.cycle));\n    }\n  }]);\n\n  return Timer;\n}(Component);\n\nexport { Timer as default };","map":{"version":3,"sources":["/home/canocalir/reactpomodorotimer/src/components/Timer/Timer.js"],"names":["React","Component","Timer","timer","props","timerRunning","clearInterval","timerId","setCurrentTime","setTimerRunning","cycle","startTimer","workTime","breakTime","currentTime"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;IAEqBC,K;;;;;;;;;;;;;;;;;;UAEnBC,K,GAAQ,YAAM;AACZ,UAAI,MAAKC,KAAL,CAAWC,YAAX,KAA4B,IAAhC,EAAsC;AACpCC,QAAAA,aAAa,CAAC,MAAKF,KAAL,CAAWG,OAAZ,CAAb;;AACA,cAAKH,KAAL,CAAWI,cAAX,CAA0B,SAA1B;;AACA,cAAKJ,KAAL,CAAWK,eAAX;AACD,OAJD,MAIO;AACL,cAAKL,KAAL,CAAWM,KAAX,KAAqB,SAArB,GACA,MAAKN,KAAL,CAAWO,UAAX,CAAsB,MAAKP,KAAL,CAAWQ,QAAjC,CADA,GAEA,MAAKR,KAAL,CAAWO,UAAX,CAAsB,MAAKP,KAAL,CAAWS,SAAjC,CAFA;AAGD;AACF,K;;;;;;;6BAEQ;AACP,aACE;AAAK,QAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADA,EAEA;AAAM,QAAA,EAAE,EAAC,OAAT;AAAiB,QAAA,OAAO,EAAE,KAAKT,KAAL,CAAWD,KAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACC,KAAKC,KAAL,CAAWU,WADZ,CAFA,EAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QALA,EAMA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAO,KAAKV,KAAL,CAAWM,KAAlB,CANA,CADF;AAUD;;;;EAzBgCT,S;;SAAdC,K","sourcesContent":["import React, { Component } from 'react'\n\nexport default class Timer extends Component {\n\n  timer = () => {\n    if (this.props.timerRunning === true) {\n      clearInterval(this.props.timerId)\n      this.props.setCurrentTime(\"25 : 00\")\n      this.props.setTimerRunning()\n    } else {\n      this.props.cycle === \"Session\" ?\n      this.props.startTimer(this.props.workTime) :\n      this.props.startTimer(this.props.breakTime)\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"timer\">\n      <br/>\n      <span id=\"count\" onClick={this.props.timer}>\n      {this.props.currentTime}\n      </span>\n      <br/>\n      <span>{this.props.cycle}</span> \n      </div>\n    )\n  }\n}\n"]},"metadata":{},"sourceType":"module"}