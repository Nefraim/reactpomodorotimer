{"ast":null,"code":"import _classCallCheck from \"/home/canocalir/reactpomodorotimer/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/canocalir/reactpomodorotimer/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/canocalir/reactpomodorotimer/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/canocalir/reactpomodorotimer/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/canocalir/reactpomodorotimer/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/canocalir/reactpomodorotimer/src/components/App.js\";\nimport React, { Component } from 'react';\nimport './App.scss';\nimport Sound from './Sound/Sound';\nimport Timer from './Timer/Timer';\nimport TimerControllers from './TimerControllers/TimerControllers';\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  function App() {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(App).call(this));\n\n    _this.startTimer = function (duration) {\n      _this.setState({\n        timerRunning: true\n      });\n\n      var time = duration * 60;\n      var minutes;\n      var seconds;\n      var runningTimer = setInterval(function () {\n        _this.setState({\n          timerId: runningTimer\n        });\n\n        minutes = Math.floor(time / 60);\n        seconds = time - minutes * 60;\n        minutes = minutes < 10 ? \"0\" + minutes : minutes;\n        seconds = seconds < 10 ? \"0\" + seconds : seconds;\n\n        _this.setState({\n          currentTime: \"\".concat(minutes, \" : \").concat(seconds)\n        });\n\n        if (time == 0) {\n          if (_this.state.cycle === \"Session\") {\n            _this.setState({\n              cycle: \"Break\",\n              timerRunning: false\n            });\n\n            clearInterval(_this.state.timerId);\n\n            _this.startTimer(_this.state.breakTime);\n          } else {\n            _this.setState({\n              cycle: \"Session\",\n              timerRunning: false\n            });\n\n            clearInterval(_this.state.timerId);\n\n            _this.startTimer(_this.state.workTime);\n          }\n        }\n      }, 1000);\n    };\n\n    _this.incrementWorkTime = function () {\n      _this.setState({\n        workTime: _this.state.workTime + 1\n      });\n    };\n\n    _this.decrementWorkTime = function () {\n      _this.setState({\n        workTime: _this.state.workTime - 1\n      });\n    };\n\n    _this.incrementBreakTime = function () {\n      _this.setState({\n        breakTime: _this.state.breakTime + 1\n      });\n    };\n\n    _this.decrementBreakTime = function () {\n      _this.setState({\n        breakTime: _this.state.breakTime - 1\n      });\n    };\n\n    _this.setSound = function (sound) {\n      _this.setState({\n        sound: sound\n      });\n    };\n\n    _this.state = {\n      timerId: 0,\n      timerRunning: false,\n      currentTime: \"25 : 00\",\n      cycle: \"Session\",\n      workTime: 25,\n      breakTime: 5,\n      sound: \"on\"\n    };\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        className: \"App\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86\n        },\n        __self: this\n      }, \"Can's Pomodoro Timer\"), React.createElement(Timer, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87\n        },\n        __self: this\n      }), React.createElement(TimerControllers, {\n        workTime: this.state.workTime,\n        breakTime: this.state.breakTime,\n        incrementWorkTime: this.incrementWorkTime,\n        decrementWorkTime: this.decrementWorkTime,\n        incrementBreakTime: this.incrementBreakTime,\n        decrementBreakTime: this.decrementBreakTime,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88\n        },\n        __self: this\n      }), React.createElement(Sound, {\n        setSound: this.setSound,\n        sound: this.state.sound,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport default App;","map":{"version":3,"sources":["/home/canocalir/reactpomodorotimer/src/components/App.js"],"names":["React","Component","Sound","Timer","TimerControllers","App","startTimer","duration","setState","timerRunning","time","minutes","seconds","runningTimer","setInterval","timerId","Math","floor","currentTime","state","cycle","clearInterval","breakTime","workTime","incrementWorkTime","decrementWorkTime","incrementBreakTime","decrementBreakTime","setSound","sound"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport './App.scss';\nimport Sound from './Sound/Sound';\nimport Timer from './Timer/Timer';\nimport TimerControllers from './TimerControllers/TimerControllers';\n\nclass App extends Component {\n  constructor () {\n    super()\n    this.state = {\n      timerId: 0,\n      timerRunning: false,\n      currentTime: \"25 : 00\",\n      cycle: \"Session\",\n      workTime: 25,\n      breakTime: 5,\n      sound: \"on\"\n    }\n  }\n\n  startTimer = (duration) => {\n    this.setState({timerRunning: true})\n    let time = duration * 60\n    let minutes;\n    let seconds;\n    let runningTimer = setInterval(() => {\n      this.setState({\n        timerId: runningTimer\n      })\n      minutes = Math.floor(time / 60)\n      seconds = time - minutes * 60\n      minutes = minutes < 10 ? \"0\" + minutes : minutes;\n      seconds = seconds < 10 ? \"0\" + seconds : seconds;\n      this.setState({currentTime : `${minutes} : ${seconds}`})\n      if (time == 0) {\n        if(this.state.cycle === \"Session\") {\n          this.setState({\n            cycle: \"Break\",\n            timerRunning: false\n          })\n          clearInterval(this.state.timerId)\n          this.startTimer(this.state.breakTime)\n        } else {\n          this.setState({\n            cycle:\"Session\",\n            timerRunning: false\n          })\n          clearInterval(this.state.timerId)\n          this.startTimer(this.state.workTime)\n        }\n      }\n    }, 1000);\n  }\n\n  incrementWorkTime = () => {\n    this.setState({\n      workTime : this.state.workTime + 1\n    })\n  }\n  \n  decrementWorkTime = () => {\n    this.setState({\n      workTime : this.state.workTime - 1\n    })\n  }\n  \n  incrementBreakTime = () => {\n    this.setState({\n      breakTime : this.state.breakTime + 1\n    })\n  }\n  \n  decrementBreakTime = () => {\n    this.setState({\n      breakTime : this.state.breakTime - 1\n    })\n  }\n    setSound = (sound) => {\n      this.setState({\n        sound: sound\n      })\n  }\n  render() {\n    return (\n      <div className=\"App\">\n      <h1>Can's Pomodoro Timer</h1>\n      <Timer/>\n      <TimerControllers\n        workTime={this.state.workTime}\n        breakTime={this.state.breakTime}\n        incrementWorkTime={this.incrementWorkTime}\n        decrementWorkTime={this.decrementWorkTime}\n        incrementBreakTime={this.incrementBreakTime}\n        decrementBreakTime={this.decrementBreakTime}\n        />\n      <Sound setSound={this.setSound} sound={this.state.sound}/>\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}